<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PersonExpertise', 'doctrine');

/**
 * BasePersonExpertise
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $person_id
 * @property integer $expertise_id
 * @property Person $Person
 * @property Expertise $Expertise
 * 
 * @method integer         getPersonId()     Returns the current record's "person_id" value
 * @method integer         getExpertiseId()  Returns the current record's "expertise_id" value
 * @method Person          getPerson()       Returns the current record's "Person" value
 * @method Expertise       getExpertise()    Returns the current record's "Expertise" value
 * @method PersonExpertise setPersonId()     Sets the current record's "person_id" value
 * @method PersonExpertise setExpertiseId()  Sets the current record's "expertise_id" value
 * @method PersonExpertise setPerson()       Sets the current record's "Person" value
 * @method PersonExpertise setExpertise()    Sets the current record's "Expertise" value
 * 
 * @package    gwis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePersonExpertise extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('person_expertise');
        $this->hasColumn('person_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('expertise_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Person', array(
             'local' => 'person_id',
             'foreign' => 'id'));

        $this->hasOne('Expertise', array(
             'local' => 'expertise_id',
             'foreign' => 'id'));
    }
}