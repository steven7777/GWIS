<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ResourceNode', 'doctrine');

/**
 * BaseResourceNode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $node_id
 * @property integer $resource_id
 * @property Resource $Resource
 * @property Node $Node
 * 
 * @method integer      getNodeId()      Returns the current record's "node_id" value
 * @method integer      getResourceId()  Returns the current record's "resource_id" value
 * @method Resource     getResource()    Returns the current record's "Resource" value
 * @method Node         getNode()        Returns the current record's "Node" value
 * @method ResourceNode setNodeId()      Sets the current record's "node_id" value
 * @method ResourceNode setResourceId()  Sets the current record's "resource_id" value
 * @method ResourceNode setResource()    Sets the current record's "Resource" value
 * @method ResourceNode setNode()        Sets the current record's "Node" value
 * 
 * @package    gwis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseResourceNode extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('resource_node');
        $this->hasColumn('node_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('resource_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Resource', array(
             'local' => 'resource_id',
             'foreign' => 'id'));

        $this->hasOne('Node', array(
             'local' => 'node_id',
             'foreign' => 'id'));
    }
}