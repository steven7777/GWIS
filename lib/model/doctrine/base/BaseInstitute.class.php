<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Institute', 'doctrine');

/**
 * BaseInstitute
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $node_id
 * @property boolean $is_node_leader
 * @property enum $participant_status
 * @property string $participant_num
 * @property integer $institute_id
 * @property string $name
 * @property string $fullname
 * @property string $country_id
 * @property string $address
 * @property string $postcode
 * @property string $city
 * @property string $cedex
 * @property string $excellence_fields
 * @property string $labos
 * @property string $specific_role
 * @property string $homepage
 * @property Country $Country
 * @property Doctrine_Collection $Institute
 * @property Node $Node
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $InstituteActivity
 * @property Doctrine_Collection $InstituteKeyword
 * @property Doctrine_Collection $Person
 * @property Doctrine_Collection $Resource
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getNodeId()             Returns the current record's "node_id" value
 * @method boolean             getIsNodeLeader()       Returns the current record's "is_node_leader" value
 * @method enum                getParticipantStatus()  Returns the current record's "participant_status" value
 * @method string              getParticipantNum()     Returns the current record's "participant_num" value
 * @method integer             getInstituteId()        Returns the current record's "institute_id" value
 * @method string              getName()               Returns the current record's "name" value
 * @method string              getFullname()           Returns the current record's "fullname" value
 * @method string              getCountryId()          Returns the current record's "country_id" value
 * @method string              getAddress()            Returns the current record's "address" value
 * @method string              getPostcode()           Returns the current record's "postcode" value
 * @method string              getCity()               Returns the current record's "city" value
 * @method string              getCedex()              Returns the current record's "cedex" value
 * @method string              getExcellenceFields()   Returns the current record's "excellence_fields" value
 * @method string              getLabos()              Returns the current record's "labos" value
 * @method string              getSpecificRole()       Returns the current record's "specific_role" value
 * @method string              getHomepage()           Returns the current record's "homepage" value
 * @method Country             getCountry()            Returns the current record's "Country" value
 * @method Doctrine_Collection getInstitute()          Returns the current record's "Institute" collection
 * @method Node                getNode()               Returns the current record's "Node" value
 * @method Doctrine_Collection getEvent()              Returns the current record's "Event" collection
 * @method Doctrine_Collection getInstituteActivity()  Returns the current record's "InstituteActivity" collection
 * @method Doctrine_Collection getInstituteKeyword()   Returns the current record's "InstituteKeyword" collection
 * @method Doctrine_Collection getPerson()             Returns the current record's "Person" collection
 * @method Doctrine_Collection getResource()           Returns the current record's "Resource" collection
 * @method Institute           setId()                 Sets the current record's "id" value
 * @method Institute           setNodeId()             Sets the current record's "node_id" value
 * @method Institute           setIsNodeLeader()       Sets the current record's "is_node_leader" value
 * @method Institute           setParticipantStatus()  Sets the current record's "participant_status" value
 * @method Institute           setParticipantNum()     Sets the current record's "participant_num" value
 * @method Institute           setInstituteId()        Sets the current record's "institute_id" value
 * @method Institute           setName()               Sets the current record's "name" value
 * @method Institute           setFullname()           Sets the current record's "fullname" value
 * @method Institute           setCountryId()          Sets the current record's "country_id" value
 * @method Institute           setAddress()            Sets the current record's "address" value
 * @method Institute           setPostcode()           Sets the current record's "postcode" value
 * @method Institute           setCity()               Sets the current record's "city" value
 * @method Institute           setCedex()              Sets the current record's "cedex" value
 * @method Institute           setExcellenceFields()   Sets the current record's "excellence_fields" value
 * @method Institute           setLabos()              Sets the current record's "labos" value
 * @method Institute           setSpecificRole()       Sets the current record's "specific_role" value
 * @method Institute           setHomepage()           Sets the current record's "homepage" value
 * @method Institute           setCountry()            Sets the current record's "Country" value
 * @method Institute           setInstitute()          Sets the current record's "Institute" collection
 * @method Institute           setNode()               Sets the current record's "Node" value
 * @method Institute           setEvent()              Sets the current record's "Event" collection
 * @method Institute           setInstituteActivity()  Sets the current record's "InstituteActivity" collection
 * @method Institute           setInstituteKeyword()   Sets the current record's "InstituteKeyword" collection
 * @method Institute           setPerson()             Sets the current record's "Person" collection
 * @method Institute           setResource()           Sets the current record's "Resource" collection
 * 
 * @package    gwis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInstitute extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('institute');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('node_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_node_leader', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('participant_status', 'enum', 11, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Participant',
              1 => 'Lab non EPN',
              2 => 'Associate',
             ),
             'primary' => false,
             'default' => 'Lab non EPN',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('participant_num', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('institute_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('fullname', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('country_id', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'default' => 'FR',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('address', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('postcode', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('city', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('cedex', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('excellence_fields', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('labos', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('specific_role', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('homepage', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasMany('Institute', array(
             'local' => 'id',
             'foreign' => 'institute_id'));

        $this->hasOne('Node', array(
             'local' => 'node_id',
             'foreign' => 'id'));

        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'institute_id'));

        $this->hasMany('InstituteActivity', array(
             'local' => 'id',
             'foreign' => 'institute_id'));

        $this->hasMany('InstituteKeyword', array(
             'local' => 'id',
             'foreign' => 'institute_id'));

        $this->hasMany('Person', array(
             'local' => 'id',
             'foreign' => 'institute_id'));

        $this->hasMany('Resource', array(
             'local' => 'id',
             'foreign' => 'institute_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}