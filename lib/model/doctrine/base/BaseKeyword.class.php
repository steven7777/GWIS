<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Keyword', 'doctrine');

/**
 * BaseKeyword
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $keywordtype_id
 * @property integer $keyword_id
 * @property string $family
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $Keyword
 * @property Keywordtype $Keywordtype
 * @property Doctrine_Collection $InstituteKeyword
 * @property Doctrine_Collection $PersonKeyword
 * @property Doctrine_Collection $ResourceKeyword
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getKeywordtypeId()    Returns the current record's "keywordtype_id" value
 * @method integer             getKeywordId()        Returns the current record's "keyword_id" value
 * @method string              getFamily()           Returns the current record's "family" value
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method Doctrine_Collection getKeyword()          Returns the current record's "Keyword" collection
 * @method Keywordtype         getKeywordtype()      Returns the current record's "Keywordtype" value
 * @method Doctrine_Collection getInstituteKeyword() Returns the current record's "InstituteKeyword" collection
 * @method Doctrine_Collection getPersonKeyword()    Returns the current record's "PersonKeyword" collection
 * @method Doctrine_Collection getResourceKeyword()  Returns the current record's "ResourceKeyword" collection
 * @method Keyword             setId()               Sets the current record's "id" value
 * @method Keyword             setKeywordtypeId()    Sets the current record's "keywordtype_id" value
 * @method Keyword             setKeywordId()        Sets the current record's "keyword_id" value
 * @method Keyword             setFamily()           Sets the current record's "family" value
 * @method Keyword             setName()             Sets the current record's "name" value
 * @method Keyword             setDescription()      Sets the current record's "description" value
 * @method Keyword             setKeyword()          Sets the current record's "Keyword" collection
 * @method Keyword             setKeywordtype()      Sets the current record's "Keywordtype" value
 * @method Keyword             setInstituteKeyword() Sets the current record's "InstituteKeyword" collection
 * @method Keyword             setPersonKeyword()    Sets the current record's "PersonKeyword" collection
 * @method Keyword             setResourceKeyword()  Sets the current record's "ResourceKeyword" collection
 * 
 * @package    gwis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKeyword extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('keyword');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('keywordtype_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('keyword_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('family', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Keyword', array(
             'local' => 'id',
             'foreign' => 'keyword_id'));

        $this->hasOne('Keywordtype', array(
             'local' => 'keywordtype_id',
             'foreign' => 'id'));

        $this->hasMany('InstituteKeyword', array(
             'local' => 'id',
             'foreign' => 'keyword_id'));

        $this->hasMany('PersonKeyword', array(
             'local' => 'id',
             'foreign' => 'keyword_id'));

        $this->hasMany('ResourceKeyword', array(
             'local' => 'id',
             'foreign' => 'keyword_id'));
    }
}