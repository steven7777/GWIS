<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Doc', 'doctrine');

/**
 * BaseDoc
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $person_provider_id
 * @property integer $person_author_id
 * @property string $docot_id
 * @property string $ref
 * @property string $name
 * @property string $filename
 * @property string $description
 * @property boolean $is_public
 * @property boolean $is_enabled
 * @property Docot $Docot
 * @property Person $Person
 * @property Person $Person_3
 * @property Doctrine_Collection $DocDoctype
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getPersonProviderId()   Returns the current record's "person_provider_id" value
 * @method integer             getPersonAuthorId()     Returns the current record's "person_author_id" value
 * @method string              getDocotId()            Returns the current record's "docot_id" value
 * @method string              getRef()                Returns the current record's "ref" value
 * @method string              getName()               Returns the current record's "name" value
 * @method string              getFilename()           Returns the current record's "filename" value
 * @method string              getDescription()        Returns the current record's "description" value
 * @method boolean             getIsPublic()           Returns the current record's "is_public" value
 * @method boolean             getIsEnabled()          Returns the current record's "is_enabled" value
 * @method Docot               getDocot()              Returns the current record's "Docot" value
 * @method Person              getPerson()             Returns the current record's "Person" value
 * @method Person              getPerson3()            Returns the current record's "Person_3" value
 * @method Doctrine_Collection getDocDoctype()         Returns the current record's "DocDoctype" collection
 * @method Doc                 setId()                 Sets the current record's "id" value
 * @method Doc                 setPersonProviderId()   Sets the current record's "person_provider_id" value
 * @method Doc                 setPersonAuthorId()     Sets the current record's "person_author_id" value
 * @method Doc                 setDocotId()            Sets the current record's "docot_id" value
 * @method Doc                 setRef()                Sets the current record's "ref" value
 * @method Doc                 setName()               Sets the current record's "name" value
 * @method Doc                 setFilename()           Sets the current record's "filename" value
 * @method Doc                 setDescription()        Sets the current record's "description" value
 * @method Doc                 setIsPublic()           Sets the current record's "is_public" value
 * @method Doc                 setIsEnabled()          Sets the current record's "is_enabled" value
 * @method Doc                 setDocot()              Sets the current record's "Docot" value
 * @method Doc                 setPerson()             Sets the current record's "Person" value
 * @method Doc                 setPerson3()            Sets the current record's "Person_3" value
 * @method Doc                 setDocDoctype()         Sets the current record's "DocDoctype" collection
 * 
 * @package    gwis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDoc extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('doc');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('person_provider_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('person_author_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('docot_id', 'string', 5, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('ref', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('filename', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('is_enabled', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Docot', array(
             'local' => 'docot_id',
             'foreign' => 'id'));

        $this->hasOne('Person', array(
             'local' => 'person_author_id',
             'foreign' => 'id'));

        $this->hasOne('Person as Person_3', array(
             'local' => 'person_provider_id',
             'foreign' => 'id'));

        $this->hasMany('DocDoctype', array(
             'local' => 'id',
             'foreign' => 'doc_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}