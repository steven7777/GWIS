<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('InstituteKeyword', 'doctrine');

/**
 * BaseInstituteKeyword
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $institute_id
 * @property integer $keyword_id
 * @property Institute $Institute
 * @property Keyword $Keyword
 * 
 * @method integer          getInstituteId()  Returns the current record's "institute_id" value
 * @method integer          getKeywordId()    Returns the current record's "keyword_id" value
 * @method Institute        getInstitute()    Returns the current record's "Institute" value
 * @method Keyword          getKeyword()      Returns the current record's "Keyword" value
 * @method InstituteKeyword setInstituteId()  Sets the current record's "institute_id" value
 * @method InstituteKeyword setKeywordId()    Sets the current record's "keyword_id" value
 * @method InstituteKeyword setInstitute()    Sets the current record's "Institute" value
 * @method InstituteKeyword setKeyword()      Sets the current record's "Keyword" value
 * 
 * @package    gwis
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInstituteKeyword extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('institute_keyword');
        $this->hasColumn('institute_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('keyword_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Institute', array(
             'local' => 'institute_id',
             'foreign' => 'id'));

        $this->hasOne('Keyword', array(
             'local' => 'keyword_id',
             'foreign' => 'id'));
    }
}